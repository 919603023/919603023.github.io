"use strict";(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[6541],{900:(l,i,e)=>{e.r(i),e.d(i,{data:()=>a});const a={key:"v-43b242d0",path:"/other/regex/_blog/%E7%AE%80%E5%8D%95%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%84%E5%88%99/%E7%AE%80%E5%8D%95%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%84%E5%88%99.html",title:"正则表达式的基本规则",lang:"zh-CN",frontmatter:{title:"正则表达式的基本规则",data:"2020年9月4日"},excerpt:"",headers:[],filePathRelative:"other/regex/_blog/简单的正则表达式规则/简单的正则表达式规则.md",git:{updatedTime:1639040836e3,contributors:[]}}},9773:(l,i,e)=>{e.r(i),e.d(i,{default:()=>r});const a=(0,e(6252).uE)('<h1 id="正则表达式的基本规则" tabindex="-1"><a class="header-anchor" href="#正则表达式的基本规则" aria-hidden="true">#</a> 正则表达式的基本规则</h1><ul><li>.   -   除换行符以外的所有字符。</li><li>^   -   字符串开头。</li><li>$   -   字符串结尾。</li><li>\\d,\\w,\\s   -   匹配数字、字符、空格。</li><li>\\D,\\W,\\S   -   匹配非数字、非字符、非空格。</li><li>[abc]   -   匹配 a、b 或 c 中的一个字母。</li><li>[a-z]   -   匹配 a 到 z 中的一个字母。</li><li>[^abc]   -   匹配除了 a、b 或 c 中的其他字母。</li><li>aa|bb   -   匹配 aa 或 bb。</li><li>?   -   0 次或 1 次匹配。</li><li>*   -   匹配 0 次或多次。</li><li>+   -   匹配 1 次或多次。</li><li>{n}   -   匹配 n次。</li><li>{n,}   -   匹配 n次以上。</li><li>{m,n}   -   最少 m 次，最多 n 次匹配。</li><li>(expr)   -   捕获 expr 子模式,以 \\1 使用它。</li><li>(?:expr)   -   忽略捕获的子模式。</li><li>(?=expr)   -   正向预查模式 expr。</li><li>(?!expr)   -   负向预查模式 expr。</li></ul>',2),r={render:function(l,i){return a}}}}]);