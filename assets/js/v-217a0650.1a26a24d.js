"use strict";(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[8682],{1841:(n,e,l)=>{l.r(e),l.d(e,{data:()=>s});const s={key:"v-217a0650",path:"/blockchain/StarCoin/_blog/Starcoin%E7%9A%84stdlib%E5%8D%87%E7%BA%A7%E5%92%8CDao%E9%93%BE%E4%B8%8A%E6%B2%BB%E7%90%86/Starcoin%E7%9A%84stdlib%E5%8D%87%E7%BA%A7%E5%92%8CDao%E9%93%BE%E4%B8%8A%E6%B2%BB%E7%90%86.html",title:"Starcoin的stdlib升级和Dao链上治理",lang:"zh-CN",frontmatter:{title:"Starcoin的stdlib升级和Dao链上治理"},excerpt:"",headers:[{level:2,title:"一、智能合约：Starcoin vs ETH",slug:"一、智能合约-starcoin-vs-eth",children:[{level:3,title:"1. 智能合约所使用的语言",slug:"_1-智能合约所使用的语言",children:[]},{level:3,title:"2. 智能合约的调用与存储",slug:"_2-智能合约的调用与存储",children:[]}]},{level:2,title:"二、智能合约升级：Starcoin vs ETH",slug:"二、智能合约升级-starcoin-vs-eth",children:[]},{level:2,title:"三、合约升级方案：Starcoin VS ETH",slug:"三、合约升级方案-starcoin-vs-eth",children:[{level:3,title:"1. PENDING",slug:"_1-pending",children:[]},{level:3,title:"2. ACTIVE",slug:"_2-active",children:[]},{level:3,title:"3. AGREED",slug:"_3-agreed",children:[]},{level:3,title:"4.QUEUED",slug:"_4-queued",children:[]},{level:3,title:"5.EXECTABLE",slug:"_5-exectable",children:[]},{level:3,title:"6.ETRACTED",slug:"_6-etracted",children:[]},{level:3,title:"7.Upgrade complete",slug:"_7-upgrade-complete",children:[]}]},{level:2,title:"四、合约升级流程操作展示",slug:"四、合约升级流程操作展示",children:[{level:3,title:"1. 编写stdlib中的代码",slug:"_1-编写stdlib中的代码",children:[]},{level:3,title:"2. 准备编译好的二进制的Module",slug:"_2-准备编译好的二进制的module",children:[]},{level:3,title:"3. 准备账号以及余额",slug:"_3-准备账号以及余额",children:[]},{level:3,title:"4. 提交提案 进入 PENDING",slug:"_4-提交提案-进入-pending",children:[]},{level:3,title:"5. 查询提案的状态",slug:"_5-查询提案的状态",children:[]},{level:3,title:"6. 等待社区议论 进入 ACTIVE",slug:"_6-等待社区议论-进入-active",children:[]},{level:3,title:"7. 社区投票 进入 AGREED",slug:"_7-社区投票-进入-agreed",children:[]},{level:3,title:"8. AGREED的提议放入更新队列 进入QUEUED",slug:"_8-agreed的提议放入更新队列-进入queued",children:[]},{level:3,title:"9. 公示期等待 进入EXECTABLE",slug:"_9-公示期等待-进入exectable",children:[]},{level:3,title:"10. 提交升级计划  进入ETRACTED",slug:"_10-提交升级计划-进入etracted",children:[]},{level:3,title:"11. 提交代码 进入Upgrade complete",slug:"_11-提交代码-进入upgrade-complete",children:[]},{level:3,title:"12. 完成合约升级流程",slug:"_12-完成合约升级流程",children:[]},{level:3,title:"13. 升级的验证",slug:"_13-升级的验证",children:[]}]}],filePathRelative:"blockchain/StarCoin/_blog/Starcoin的stdlib升级和Dao链上治理/Starcoin的stdlib升级和Dao链上治理.md",git:{updatedTime:1631072837e3,contributors:[]}}},6873:(n,e,l)=>{l.r(e),l.d(e,{default:()=>Qn});var s=l(6252),a=l(2497);const r=(0,s._)("h1",{id:"starcoin的stdlib升级和dao链上治理",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#starcoin的stdlib升级和dao链上治理","aria-hidden":"true"},"#"),(0,s.Uk)(" Starcoin的stdlib升级和Dao链上治理")],-1),t=(0,s._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,s._)("pre",{class:"language-text"},[(0,s._)("code",null,"* 本文由Starcoin社区原创 作者:WGB\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),_=(0,s._)("h1",{id:"starcoin",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#starcoin","aria-hidden":"true"},"#"),(0,s.Uk)(" Starcoin")],-1),o=(0,s._)("p",null,"  Starcoin 与其他币种不同，Starcoin把的共识、区块设置、区块奖励、账号定义、Token定义、NFT协议等预先定义在stdlib中，以便升级维护统一管理。stdlib是存在于链上的合约库，所以starcoin 可以不使用硬编码来实现区块奖励、区块算法、共识等定义，同时stdlib也可以通过Dao链上治理的方式进行升级或修复。",-1),u=(0,s._)("h2",{id:"一、智能合约-starcoin-vs-eth",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#一、智能合约-starcoin-vs-eth","aria-hidden":"true"},"#"),(0,s.Uk)(" 一、智能合约：Starcoin vs ETH")],-1),c=(0,s._)("h3",{id:"_1-智能合约所使用的语言",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_1-智能合约所使用的语言","aria-hidden":"true"},"#"),(0,s.Uk)(" 1. 智能合约所使用的语言")],-1),i=(0,s._)("table",null,[(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,"项目"),(0,s._)("th",null,"区别")])]),(0,s._)("tbody",null,[(0,s._)("tr",null,[(0,s._)("td",null,"ETH"),(0,s._)("td",null,"以太坊的智能合约一般使用solidity语言编写(无标准库)")]),(0,s._)("tr",null,[(0,s._)("td",null,"Starcoin"),(0,s._)("td",null,"Starcoin使用move语言编写。 在move语言中分module和script，有stdlib(官方的标准库)")])])],-1),d=(0,s._)("p",null,[(0,s._)("strong",null,"以太坊：")],-1),p=(0,s._)("blockquote",null,[(0,s._)("p",null,"  以太坊的合约大多时使用solidity编写，在编写过程中如ERC20等协议的代币需要编写时自己实现，没有stdllib标准库。")],-1),b=(0,s._)("p",null,[(0,s._)("strong",null,"Starcoin:")],-1),k=(0,s._)("blockquote",null,[(0,s._)("p",null,"  Starcoin的合约使用move语言编写，move语言有module和script的概念，module大多用来编写基础代码，通过script来组合调用。在Starcoin中有stdlib，内置实现了ERC20、NFT、Dao等协议，同时move语言支持范型，可以方便的创建出不同的Token以及其他功能。")],-1),m=(0,s._)("h3",{id:"_2-智能合约的调用与存储",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_2-智能合约的调用与存储","aria-hidden":"true"},"#"),(0,s.Uk)(" 2. 智能合约的调用与存储")],-1),h=(0,s._)("table",null,[(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,"项目"),(0,s._)("th",null,"区别")])]),(0,s._)("tbody",null,[(0,s._)("tr",null,[(0,s._)("td",null,"ETH"),(0,s._)("td",null,[(0,s.Uk)("以太坊调用智能合约是 "),(0,s._)("strong",null,"合约地址"),(0,s.Uk)(" + "),(0,s._)("strong",null,"方法"),(0,s.Uk)(" + "),(0,s._)("strong",null,"数据")])]),(0,s._)("tr",null,[(0,s._)("td",null,"Starcoin"),(0,s._)("td",null,[(0,s.Uk)("Starcoin调用智能合约是 通过 "),(0,s._)("strong",null,"拥有者地址"),(0,s.Uk)(" + "),(0,s._)("strong",null,"模块"),(0,s.Uk)(" + "),(0,s._)("strong",null,"方法"),(0,s.Uk)(" + "),(0,s._)("strong",null,"数据")])])])],-1),g=(0,s._)("p",null,[(0,s._)("strong",null,"以太坊：")],-1),U=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("  "),(0,s._)("strong",null,"以太坊"),(0,s.Uk)("分为合约地址与非合约地址，合约需要放在合约地址，所以在调用合约时需要通过合约的地址来找到合约。如果合约升级，在不使用Proxy contract (代理合约)等方法时，需要改变合约地址才能使用新的合约。")])],-1),v=(0,s._)("p",null,[(0,s._)("strong",null,"Starcoin:")],-1),E=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("  "),(0,s._)("strong",null,"Starcoin"),(0,s.Uk)("的合约以及其他资源(Token、NFT ...)是存储在账户地址，所以在调用合约时需要通过"),(0,s._)("strong",null,"拥有者地址"),(0,s.Uk)("+"),(0,s._)("strong",null,"模块"),(0,s.Uk)(" 来找到合约。如果合约升级，不会影响调用合约的地址和模块名称。")])],-1),T=(0,s._)("h2",{id:"二、智能合约升级-starcoin-vs-eth",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#二、智能合约升级-starcoin-vs-eth","aria-hidden":"true"},"#"),(0,s.Uk)(" 二、智能合约升级：Starcoin vs ETH")],-1),x=(0,s._)("table",null,[(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,"项目"),(0,s._)("th",null,"区别")])]),(0,s._)("tbody",null,[(0,s._)("tr",null,[(0,s._)("td",null,"ETH"),(0,s._)("td",null,[(0,s.Uk)("合约升级意味着新的合约地址 "),(0,s._)("strong",null,"约等于"),(0,s.Uk)(" 一个新的合约 需要修改合约地址才能访问新的合约")])]),(0,s._)("tr",null,[(0,s._)("td",null,"Starcoin"),(0,s._)("td",null,[(0,s.Uk)("合约升级不影响合约调用依然使用老合约的"),(0,s._)("strong",null,"拥有者地址"),(0,s.Uk)(" + "),(0,s._)("strong",null,"模块"),(0,s.Uk)(" + "),(0,s._)("strong",null,"方法"),(0,s.Uk)(" + "),(0,s._)("strong",null,"数据"),(0,s.Uk)("方法就可以调用新合约")])])])],-1),D=(0,s._)("p",null,[(0,s._)("strong",null,"以太坊：")],-1),S=(0,s._)("blockquote",null,[(0,s._)("p",null,"  以太坊上的合约需要升级但不希望更改调用的地址时可以使用Proxy contract (代理合约)，访问代理合约的地址，由代理合约提供新合约的地址。")],-1),f=(0,s._)("p",null,[(0,s._)("strong",null,"Starcoin：")],-1),y=(0,s._)("blockquote",null,[(0,s._)("p",null,"  Starcoin的合约需要升级时Dao去中心化社区投票、Two-phase (两阶段提交)来解决，在升级后就可以使用原地址调用新合约。")],-1),C=(0,s._)("h2",{id:"三、合约升级方案-starcoin-vs-eth",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#三、合约升级方案-starcoin-vs-eth","aria-hidden":"true"},"#"),(0,s.Uk)(" 三、合约升级方案：Starcoin VS ETH")],-1),A=(0,s._)("p",null,[(0,s._)("img",{src:a,alt:"合约升级方案流程"}),(0,s.Uk)("   Starcoin的stdlib合约存在于链上，采用Dao去中心化的管理，社区可通过投票操作来决定合约升级计划的部署等。"),(0,s._)("br"),(0,s.Uk)("   代码提交是采用两阶段提交：先提交升级计划，再提交更新代码。"),(0,s._)("br"),(0,s.Uk)(" 整个流程分为七个阶段：")],-1),M=(0,s._)("ol",null,[(0,s._)("li",null,"PENDING"),(0,s._)("li",null,"ACTIVE"),(0,s._)("li",null,"AGREED"),(0,s._)("li",null,"QUEUED"),(0,s._)("li",null,"EXECTABLE"),(0,s._)("li",null,"ETRACTED"),(0,s._)("li",null,"Upgrade complete")],-1),q=(0,s._)("h3",{id:"_1-pending",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_1-pending","aria-hidden":"true"},"#"),(0,s.Uk)(" 1. PENDING")],-1),G=(0,s._)("p",null,"  在coder 修改代码后向Dao提交一个升级的proposal txn，整个流程进入PENDING状态。设置有一段时间使社区对该项议题讨论和了解后进入下一个阶段。",-1),R=(0,s._)("h3",{id:"_2-active",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_2-active","aria-hidden":"true"},"#"),(0,s.Uk)(" 2. ACTIVE")],-1),N=(0,s._)("p",null,"  在上个阶段的结束后，进入ACTIVE阶段，在这个阶段需要社区的人员进行投票，在到达设置的规定时间后转为下个阶段。",-1),B=(0,s._)("h3",{id:"_3-agreed",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_3-agreed","aria-hidden":"true"},"#"),(0,s.Uk)(" 3. AGREED")],-1),I=(0,s._)("p",null,"  在上个阶段到达规定时间后，流程进入到AGREED阶段，在这个阶段中会对投票结果进行统计，如果超过预定占比，则视为升级计划被Dao社区允许，在发起公示后，可以进行下一个阶段。",-1),P=(0,s._)("h3",{id:"_4-queued",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_4-queued","aria-hidden":"true"},"#"),(0,s.Uk)(" 4.QUEUED")],-1),V=(0,s._)("p",null,"  在上个阶段的投票结果统计后，流程进入由发起公示后到公示期，这个阶段主要是展示发起人和proposal的信息等，当公示期过去之后进入下个阶段。",-1),w=(0,s._)("h3",{id:"_5-exectable",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_5-exectable","aria-hidden":"true"},"#"),(0,s.Uk)(" 5.EXECTABLE")],-1),H=(0,s._)("p",null,"  在上个阶段的公示期时间结束后，流程进入到可以升级合约的Two-phase（两阶段提交）的第一个阶段，提交合约代码升级计划。在提交完合约升级计划后即可进入下一个阶段。",-1),L=(0,s._)("h3",{id:"_6-etracted",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_6-etracted","aria-hidden":"true"},"#"),(0,s.Uk)(" 6.ETRACTED")],-1),Q=(0,s._)("p",null,"  在上个阶段的提交合约升级计划后，流程进入到升级合约的Two-phase（两阶段提交）的第二个阶段，在此阶段可以提交修复或升级合约的代码，在提交完成后即可进入下个阶段。",-1),X=(0,s._)("h3",{id:"_7-upgrade-complete",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_7-upgrade-complete","aria-hidden":"true"},"#"),(0,s.Uk)(" 7.Upgrade complete")],-1),F=(0,s._)("p",null,"  在上个阶段的代码提交后，整个合约升级流程结束，在此之后可以使用新的合约代码进行操作。",-1),O=(0,s._)("h2",{id:"四、合约升级流程操作展示",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#四、合约升级流程操作展示","aria-hidden":"true"},"#"),(0,s.Uk)(" 四、合约升级流程操作展示")],-1),j=(0,s._)("h3",{id:"_1-编写stdlib中的代码",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_1-编写stdlib中的代码","aria-hidden":"true"},"#"),(0,s.Uk)(" 1. 编写stdlib中的代码")],-1),z=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("此处以stdlib中的"),(0,s._)("strong",null,"DummyToken.move"),(0,s.Uk)("为例，增加一个Mymint函数和Mymint脚本。功能为定值造100个DummyToken。")])],-1),W=(0,s._)("p",null,[(0,s._)("strong",null,"DummyToken.move下的 DummyToken Module ：")],-1),Y=(0,s._)("div",{class:"language-Move ext-Move line-numbers-mode"},[(0,s._)("pre",{class:"language-Move"},[(0,s._)("code",null,"  /// Anyone can mint DummyToken, amount should < 10000\n    public fun mint(_account: &signer, amount: u128) : Token<DummyToken> acquires SharedMintCapability{\n        assert(amount <= 10000, Errors::invalid_argument(EMINT_TOO_MUCH));\n        let cap = borrow_global<SharedMintCapability>(token_address());\n        Token::mint_with_capability(&cap.cap, amount)\n    }\n\n    // 在此增加新的函数 \n    public fun Mymint(_account: &signer) : Token<DummyToken> acquires SharedMintCapability{\n        let cap = borrow_global<SharedMintCapability>(token_address());\n        Token::mint_with_capability(&cap.cap, 100)\n    }\n\n    /// Return the token address.\n    public fun token_address(): address {\n        Token::token_address<DummyToken>()\n    }\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"11"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"12"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"13"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"14"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"15"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"16"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"17"),(0,s._)("br")])],-1),J=(0,s._)("p",null,[(0,s._)("strong",null,"DummyToken.move下的 DummyTokenScripts Module ：")],-1),K=(0,s._)("div",{class:"language-move ext-move line-numbers-mode"},[(0,s._)("pre",{class:"language-move"},[(0,s._)("code",null,"    public(script) fun mint(sender: signer, amount: u128){\n        let token = DummyToken::mint(&sender, amount);\n        let sender_addr = Signer::address_of(&sender);\n        if(Account::is_accept_token<DummyToken>(sender_addr)){\n            Account::do_accept_token<DummyToken>(&sender);\n        };\n        Account::deposit(sender_addr, token);\n    }\n\n    //在此增加新的脚本函数\n    public(script) fun Mymint(sender:signer){\n        let token = DummyToken::Mymint(&sender);\n        let sender_addr = Signer::address_of(&sender);\n        if(Account::is_accept_token<DummyToken>(sender_addr)){\n            Account::do_accept_token<DummyToken>(&sender);\n        };\n        Account::deposit(sender_addr, token);\n    }\n")]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"11"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"12"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"13"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"14"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"15"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"16"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"17"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"18"),(0,s._)("br")])],-1),Z=(0,s._)("h3",{id:"_2-准备编译好的二进制的module",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_2-准备编译好的二进制的module","aria-hidden":"true"},"#"),(0,s.Uk)(" 2. 准备编译好的二进制的Module")],-1),$=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("在Starcoin 命令行中执行命令，分两步编译、打包出二进制的 Module "),(0,s._)("strong",null,"编译：")])],-1),nn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("执行：\n    dev compile -s 0x1 path/to/DummyToken.move\n\n结果：\n    "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token string"},'"ok"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"["),(0,s.Uk)("\n            "),(0,s._)("span",{class:"token string"},'"path/to/DummyToken.mv"'),(0,s.Uk)(",\n            "),(0,s._)("span",{class:"token string"},'"path/to/DummyTokenScripts.mv"'),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token punctuation"},"]"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"11"),(0,s._)("br")])],-1),en=(0,s._)("p",null,[(0,s._)("strong",null,"打包：")],-1),ln=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("执行：\n    dev package -n MymintUpgrade -o storage path/to/DummyToken*\n\n结果：\n    "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token string"},'"ok"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n            "),(0,s._)("span",{class:"token string"},'"file"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},'"path/to/storage/MymintUpgrade.blob"'),(0,s.Uk)(",\n            "),(0,s._)("span",{class:"token string"},'"package_hash"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token string"},'"0x6e54935144115233c9decb255d3bcd5f14c7b9d82c968c5f3a0cb1b14f18bce8"'),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"10"),(0,s._)("br")])],-1),sn=(0,s._)("h3",{id:"_3-准备账号以及余额",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_3-准备账号以及余额","aria-hidden":"true"},"#"),(0,s.Uk)(" 3. 准备账号以及余额")],-1),an=(0,s._)("p",null,[(0,s._)("strong",null,"准备账号：")],-1),rn=(0,s._)("blockquote",null,[(0,s._)("p",null,"需要两个账号："),(0,s._)("ol",null,[(0,s._)("li",null,"coder账号：   用来提交计划和提交代码等"),(0,s._)("li",null,"投票代表账号：  用来投票")])],-1),tn=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("使用密钥导入或使用account create 创建账号即可 "),(0,s._)("strong",null,"准备余额：")]),(0,s._)("ol",null,[(0,s._)("li",null,"coder账号需要一定的STC作为提案和升级等操作的GAS费。"),(0,s._)("li",null,[(0,s.Uk)("投票代表账号需要大量的STC作为投票的票数。 使用命令行 account unlock "),(0,s._)("strong",null,"账户地址"),(0,s.Uk)(" 解锁账户 "),(0,s._)("strong",null,"获取STC方法：")])])],-1),_n=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("默认账户获取：\n    dev get-coin -v 6000000STC\n转账方式：\n    account transfer -s 0x0000000000000000000000000a550c18 -r "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("账号收款识别码"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -v "),(0,s._)("span",{class:"token number"},"60000000000000000"),(0,s.Uk)(" -b\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br")])],-1),on=(0,s._)("h3",{id:"_4-提交提案-进入-pending",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_4-提交提案-进入-pending","aria-hidden":"true"},"#"),(0,s.Uk)(" 4. 提交提案 进入 PENDING")],-1),un=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("提交提案：\n    dev module-proposal -s "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -m "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("module path"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -v "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("version"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -e "),(0,s._)("span",{class:"token boolean"},"false"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br")])],-1),cn=(0,s._)("blockquote",null,[(0,s._)("ul",null,[(0,s._)("li",null,"-m 表示升级包的路径；"),(0,s._)("li",null,"-v 表示新的版本号；"),(0,s._)("li",null,"-e 表示是否跳过 module 兼容性检查强制升级，false 表示不跳过兼容性检查，缺省不跳过。")])],-1),dn=(0,s._)("h3",{id:"_5-查询提案的状态",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_5-查询提案的状态","aria-hidden":"true"},"#"),(0,s.Uk)(" 5. 查询提案的状态")],-1),pn=(0,s._)("p",null,[(0,s._)("strong",null,"查看提议id:")],-1),bn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("dev call --function 0x1::Dao::proposal_info -t 0x1::STC::STC -t 0x1::UpgradeModuleDaoProposal::UpgradeModuleV2 --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),kn=(0,s._)("p",null,[(0,s._)("strong",null,"查看提议状态:")],-1),mn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("    dev call --function 0x1::Dao::proposal_state -t 0x1::STC::STC -t 0x1::UpgradeModuleDaoProposal::UpgradeModuleV2 --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal_id"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n结果:\n    "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token string"},'"ok"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"["),(0,s.Uk)("\n            "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("state_num"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token punctuation"},"]"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br")])],-1),hn=(0,s._)("h3",{id:"_6-等待社区议论-进入-active",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_6-等待社区议论-进入-active","aria-hidden":"true"},"#"),(0,s.Uk)(" 6. 等待社区议论 进入 ACTIVE")],-1),gn=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("在PENDING状态下经过一段时间进入投票期,在dev下可以通过sleep方式加快区块链时间进入下个阶段。 "),(0,s._)("strong",null,"加速进入：")])],-1),Un=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("加速时间：\n    dev "),(0,s._)("span",{class:"token function"},"sleep"),(0,s.Uk)(" -t "),(0,s._)("span",{class:"token number"},"3600000"),(0,s.Uk)("\n生成块（生效时间）：\n    dev gen-block\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br")])],-1),vn=(0,s._)("p",null,[(0,s._)("strong",null,"查看提案状态：")],-1),En=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("执行：\n    dev call --function 0x1::Dao::proposal_state -t 0x1::STC::STC -t 0x1::UpgradeModuleDaoProposal::UpgradeModuleV2 --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal_id"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n结果：\n    "),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token string"},'"ok"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"["),(0,s.Uk)("\n            "),(0,s._)("span",{class:"token number"},"2"),(0,s.Uk)("\n        "),(0,s._)("span",{class:"token punctuation"},"]"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n转为ACTIVE状态\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br")])],-1),Tn=(0,s._)("h3",{id:"_7-社区投票-进入-agreed",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_7-社区投票-进入-agreed","aria-hidden":"true"},"#"),(0,s.Uk)(" 7. 社区投票 进入 AGREED")],-1),xn=(0,s._)("blockquote",null,[(0,s._)("p",null,"用投票代表账号参与投票后等待投票时间结束后，流程进入AGREED阶段")],-1),Dn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("投票：\n    account execute-function -s "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" --function 0x1::DaoVoteScripts::cast_vote -t 0x1::STC::STC -t 0x1::UpgradeModuleDaoProposal::UpgradeModuleV2 --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" --arg "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal_id"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" --arg "),(0,s._)("span",{class:"token boolean"},"true"),(0,s.Uk)(" --arg 59000000000000000u128\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br")])],-1),Sn=(0,s._)("h3",{id:"_8-agreed的提议放入更新队列-进入queued",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_8-agreed的提议放入更新队列-进入queued","aria-hidden":"true"},"#"),(0,s.Uk)(" 8. AGREED的提议放入更新队列 进入QUEUED")],-1),fn=(0,s._)("blockquote",null,[(0,s._)("p",null,"在进入AGREED 以后，任何人都可以将状态为 AGREED 的提议放入更新队列。")],-1),yn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("dev module-queue -s "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -a "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -i "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal_id"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),Cn=(0,s._)("h3",{id:"_9-公示期等待-进入exectable",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_9-公示期等待-进入exectable","aria-hidden":"true"},"#"),(0,s.Uk)(" 9. 公示期等待 进入EXECTABLE")],-1),An=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("公示期的等待时间过去之后，就可以进入执行阶段。dev下可以通过命令加速此阶段 "),(0,s._)("strong",null,"加速进入：")])],-1),Mn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("加速时间：\n    dev "),(0,s._)("span",{class:"token function"},"sleep"),(0,s.Uk)(" -t "),(0,s._)("span",{class:"token number"},"3600000"),(0,s.Uk)("\n生成块（生效时间）：\n    dev gen-block\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br")])],-1),qn=(0,s._)("h3",{id:"_10-提交升级计划-进入etracted",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_10-提交升级计划-进入etracted","aria-hidden":"true"},"#"),(0,s.Uk)(" 10. 提交升级计划 进入ETRACTED")],-1),Gn=(0,s._)("blockquote",null,[(0,s._)("p",null,"这一步是可执行阶段，可以执行升级计划。")],-1),Rn=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("dev module-plan -i "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal_id"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)(" -a "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("proposal address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("  -s "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),Nn=(0,s._)("h3",{id:"_11-提交代码-进入upgrade-complete",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_11-提交代码-进入upgrade-complete","aria-hidden":"true"},"#"),(0,s.Uk)(" 11. 提交代码 进入Upgrade complete")],-1),Bn=(0,s._)("blockquote",null,[(0,s._)("p",null,[(0,s.Uk)("在这一步中Dao流程已经结束，两阶段提交流程进入最后一阶段 "),(0,s._)("strong",null,"代码模块提交：")])],-1),In=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("dev module_exe -m path/to/storage/MymintUpgrade.blob -s "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br")])],-1),Pn=(0,s._)("h3",{id:"_12-完成合约升级流程",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_12-完成合约升级流程","aria-hidden":"true"},"#"),(0,s.Uk)(" 12. 完成合约升级流程")],-1),Vn=(0,s._)("blockquote",null,[(0,s._)("p",null,"至此已经完成整个合约升级过程")],-1),wn=(0,s._)("h3",{id:"_13-升级的验证",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_13-升级的验证","aria-hidden":"true"},"#"),(0,s.Uk)(" 13. 升级的验证")],-1),Hn=(0,s._)("blockquote",null,[(0,s._)("p",null,"可以执行DummyTokenScripts模块中的 Mymint函数来校验是否升级成功")],-1),Ln=(0,s._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,s._)("pre",{class:"language-bash"},[(0,s._)("code",null,[(0,s.Uk)("执行获取DummyToken "),(0,s._)("span",{class:"token number"},"100"),(0,s.Uk)("个：\n    account execute-function --function 0x1::DummyTokenScripts::Mymint -b -s "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n查看DummyToken：\n    account show "),(0,s._)("span",{class:"token operator"},"<"),(0,s.Uk)("account address"),(0,s._)("span",{class:"token operator"},">"),(0,s.Uk)("\n结果：\n    "),(0,s._)("span",{class:"token string"},'"balances"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token punctuation"},"{"),(0,s.Uk)("\n      "),(0,s._)("span",{class:"token string"},'"0x00000000000000000000000000000001::DummyToken::DummyToken"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"100"),(0,s.Uk)(",\n      "),(0,s._)("span",{class:"token string"},'"0x00000000000000000000000000000001::STC::STC"'),(0,s._)("span",{class:"token builtin class-name"},":"),(0,s.Uk)(),(0,s._)("span",{class:"token number"},"9999645054"),(0,s.Uk)("\n    "),(0,s._)("span",{class:"token punctuation"},"}"),(0,s.Uk)("\n")])]),(0,s._)("div",{class:"line-numbers"},[(0,s._)("span",{class:"line-number"},"1"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"2"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"3"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"4"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"5"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"6"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"7"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"8"),(0,s._)("br"),(0,s._)("span",{class:"line-number"},"9"),(0,s._)("br")])],-1),Qn={render:function(n,e){return(0,s.wg)(),(0,s.iD)(s.HY,null,[r,t,_,o,u,c,i,d,p,b,k,m,h,g,U,v,E,T,x,D,S,f,y,C,A,M,q,G,R,N,B,I,P,V,w,H,L,Q,X,F,O,j,z,W,Y,J,K,Z,$,nn,en,ln,sn,an,rn,tn,_n,on,un,cn,dn,pn,bn,kn,mn,hn,gn,Un,vn,En,Tn,xn,Dn,Sn,fn,yn,Cn,An,Mn,qn,Gn,Rn,Nn,Bn,In,Pn,Vn,wn,Hn,Ln],64)}}},2497:(n,e,l)=>{n.exports=l.p+"assets/img/合约升级流程.b16bcb77.jpg"}}]);